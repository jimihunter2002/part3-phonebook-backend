{"version":3,"sources":["Filter.js","PersonForm.js","DeleteButton.js","Person.js","Persons.js","service/personService.js","ErrorNotification.js","SuccessNotification.js","App.js","index.js"],"names":["Filter","props","value","onChange","id","PersonForm","handler","onSubmit","addName","type","handleChangeName","newName","placeholder","required","handleChangePhone","newPhone","pattern","style","backgroundColor","addBtnColor","Button","onClickHandler","bgColor","onClick","DeleteButton","person","useState","setBgColor","event","setTimeout","window","confirm","name","onDeleteHandler","Person","phone","Persons","listOfPeopleToShow","map","key","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","ErrorNotification","message","className","SuccessNotification","App","persons","setPersons","setNewName","setNewPhone","searchString","setSearchString","setAddBtnColor","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personService","peopleResponse","catch","error","console","dir","filterItems","arr","query","filter","el","toLowerCase","item","toLocaleLowerCase","includes","inputName","target","split","input","join","preventDefault","nameObj","filteredContact","length","personResponse","concat","err","contactInfo","updatedContact","people","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c13c2f.chunk.js","sourcesContent":["import React from 'react';\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with{' '}\r\n      <input value={props.value} onChange={props.onChange} id='olu' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({ handler }) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={handler.addName}>\r\n        <div>\r\n          name:\r\n          <input\r\n            type='text'\r\n            onChange={handler.handleChangeName}\r\n            value={handler.newName}\r\n            placeholder='Bobby Benson'\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input\r\n            type='tel'\r\n            onChange={handler.handleChangePhone}\r\n            value={handler.newPhone}\r\n            required\r\n            pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\r\n            placeholder='079-532-6745'\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            type='submit'\r\n            style={{ backgroundColor: handler.addBtnColor }}>\r\n            add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst Button = ({ onClickHandler, bgColor }) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type='button'\r\n        value='delete'\r\n        onClick={onClickHandler}\r\n        style={{ backgroundColor: bgColor }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst DeleteButton = ({ person, handler }) => {\r\n  const [bgColor, setBgColor] = useState('');\r\n\r\n  const onClickHandler = event => {\r\n    setBgColor('#429bf5');\r\n    setTimeout(() => {\r\n      let result = window.confirm(`Delete ${person.name}`);\r\n      if (result) {\r\n        handler.onDeleteHandler(person);\r\n      } else {\r\n        setBgColor('');\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClickHandler={onClickHandler} bgColor={bgColor} />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst Person = ({ person, handler }) => {\r\n  return (\r\n    <>\r\n      {person.name} {person.phone}\r\n      <DeleteButton person={person} handler={handler} />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ listOfPeopleToShow, handler }) => {\r\n  return (\r\n    <>\r\n      {listOfPeopleToShow.map(person => (\r\n        <Person key={person.id} person={person} handler={handler} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\n// const baseUrl = 'http://localhost:3001/persons';\r\n//const baseUrl = 'http://localhost:3001/api/persons';\r\n//Heroku url\r\n//const baseUrl = 'https://helsinki-phonebook.herokuapp.com/api/persons';\r\n// because build has been copy to backend project we can use relative URL\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletePerson,\r\n};\r\n","import React from 'react';\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className='error notification'>{message}</div>;\r\n};\r\n\r\nexport default ErrorNotification;\r\n","import React from 'react';\r\n\r\nconst SuccessNotification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className='success notification'>{message}</div>;\r\n};\r\n\r\nexport default SuccessNotification;\r\n","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport personService from './service/personService';\nimport ErrorNotification from './ErrorNotification';\nimport SuccessNotification from './SuccessNotification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [searchString, setSearchString] = useState('');\n  const [addBtnColor, setAddBtnColor] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(peopleResponse => {\n        setPersons(peopleResponse);\n      })\n      .catch(error => console.dir(error));\n  }, []);\n\n  const addName = event => {\n    event.preventDefault();\n    setAddBtnColor('#429bf5');\n    let nameObj = { name: newName, phone: newPhone };\n\n    const filteredContact = filterItems(persons, nameObj.name);\n    if (filteredContact.length === 0) {\n      setTimeout(() => {\n        personService\n          .create(nameObj)\n          .then(personResponse => {\n            setPersons(persons.concat(personResponse));\n            setAddBtnColor('');\n            setNewName('');\n            setNewPhone('');\n            setSuccessMessage(`${nameObj.name} added to Phonebook`);\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000);\n          })\n          .catch(err => {\n            setErrorMessage(\n              // `Cannot add ${nameObj.name} to Phonebook try again later`,\n              err.response.data.error,\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }, 0);\n    } else {\n      const [contactInfo] = filteredContact;\n      if (contactInfo.phone === nameObj.phone) {\n        setTimeout(() => {\n          let result = window.confirm(\n            `${contactInfo.name} is already added to phonebook, replace the old number with a new one`,\n          );\n          if (result) {\n            //setNewName('');\n            setNewPhone('');\n            setAddBtnColor('');\n          } else {\n            setNewName(nameObj.name);\n            setNewPhone(nameObj.phone);\n            setAddBtnColor('');\n          }\n        }, 0);\n      } else {\n        //update the contact\n        const updatedContact = { ...contactInfo, phone: nameObj.phone };\n        setTimeout(() => {\n          personService\n            .update(contactInfo.id, updatedContact)\n            .then(response => {\n              setSuccessMessage(\n                `${nameObj.name} contact information updated successfully in Phonebook`,\n              );\n              setTimeout(() => {\n                setSuccessMessage(null);\n              }, 5000);\n              setPersons(\n                persons.map(people =>\n                  people.id !== contactInfo.id ? people : response,\n                ),\n              );\n              setNewName('');\n              setNewPhone('');\n              setAddBtnColor('');\n            })\n            .catch(err => {\n              setErrorMessage(\n                // `${nameObj.name} contact information cannot be updated now try again later`,\n                err.response.data.error,\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 4000);\n            });\n        }, 0);\n      }\n    }\n  };\n\n  //for filtering array\n  const filterItems = (arr, query) => {\n    return arr.filter(el => el.name.toLowerCase() === query.toLowerCase());\n  };\n\n  const onDeleteHandler = person => {\n    personService\n      .deletePerson(person.id)\n      .then(response => {\n        setSuccessMessage(`${person.name} removed successfully from Phonebook`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n        personService.getAll().then(response => setPersons(response));\n      })\n      .catch(err => {\n        setErrorMessage(\n          `Cannot delete ${person.name} from Phonebook try again later`,\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  const handleChangeName = event => {\n    let inputName = event.target.value;\n    inputName = inputName\n      .split(' ')\n      .filter(input => input)\n      .join(' ');\n    setNewName(inputName);\n  };\n\n  const handleChangePhone = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleSearch = event => {\n    setSearchString(event.target.value);\n  };\n\n  const listOfPeopleToShow = !searchString\n    ? persons\n    : persons.filter(item =>\n        item.name\n          .toLocaleLowerCase()\n          .includes(searchString.toLocaleLowerCase()),\n      );\n\n  const handler = {\n    newName,\n    newPhone,\n    addBtnColor,\n    handleChangeName,\n    handleChangePhone,\n    addName,\n    onDeleteHandler,\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <br />\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter value={searchString} onChange={handleSearch} />\n      <br />\n      <h2>Add a new</h2>\n      <PersonForm handler={handler} />\n      <h2>Numbers</h2>\n      <Persons listOfPeopleToShow={listOfPeopleToShow} handler={handler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}